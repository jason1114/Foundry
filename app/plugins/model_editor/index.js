// Generated by CoffeeScript 1.8.0
(function() {
  var define_controller;

  define('model_editor', function() {
    var user_plugin;
    return user_plugin = {
      name: 'model_editor',
      anchor: '#/model_editor',
      title: 'Model Editor',
      type: 'plugin',
      icon: 'icon-pencil',
      init: function() {
        var attrs, common_fields, field, fields_num, self, supported_field, _results;
        self = this;
        console.log('init');
        supported_field = {
          '_field_switch': ["on_value", "off_value", "default_value"],
          '_field_text_input': ["default_value", "required"],
          '_field_text_area': ["default_value", "required"],
          '_field_rate': ["default_value", "max_rate"],
          '_field_number_input': ["default_value", "max_value", "min_value", "required"],
          '_field_image': ["required"]
        };
        common_fields = ["model_belonged_to", "field_name"];
        fields_num = Object.keys(supported_field).length;
        _results = [];
        for (field in supported_field) {
          attrs = supported_field[field];
          _results.push(foundry.model(field, attrs.concat(common_fields), function() {
            if (fields_num-- === 1) {
              foundry.initialized(self.name);
              return define_controller();
            }
          }));
        }
        return _results;
      }
    };
  });

  define_controller = function() {
    return angular.module('foundry').controller('ModelEditorController', [
      '$scope', '$foundry', function($scope, $foundry) {
        var generated_prefix, model, name, _ref, _results;
        window.scope = $scope;
        generated_prefix = "_model_";
        $scope.generated_models = {};
        _ref = foundry._models;
        _results = [];
        for (name in _ref) {
          model = _ref[name];
          if (name.indexOf(generated_prefix) !== -1) {
            _results.push($scope.generated_models[name.substr(generated_prefix.length)] = model);
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      }
    ]);
  };

}).call(this);
